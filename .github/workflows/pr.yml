name: CI - Tests and Checks

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  # FIXME delete this job.
  test-ci:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
    steps:
      # +----------------------------------------------------------------------+
      # + Github Actions chores                                                +
      # +----------------------------------------------------------------------+

      - name: "Checkout code"
        uses: actions/checkout@v2

      - uses: nixbuild/nix-quick-install-action@v29

      - name: Grant write permissions to nix directories
        run: |
          # We need to grant ourselves write privileges to the Nix directories
          # for `actions/cache` to work:
          chmod --recursive u+w /nix || true 
          chmod --recursive u+w ~/.cache/nix || true 
          chmod --recursive u+w ~root/.cache/nix || true

      - uses: actions/cache@v4
        with:
          key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix') }}
          restore-keys: |
            nix-${{ runner.os }}-
          path: |
            /nix
            ~/.cache/nix
            ~root/.cache/nix

      # +----------------------------------------------------------------------+
      # + Dependency install                                                   +
      # +----------------------------------------------------------------------+

      - name: Install packages from Nix development environment
        run: nix develop --command true

      - name: Install Node dependencies
        run: nix develop --command -- pnpm install --frozen-lockfile

      # +----------------------------------------------------------------------+
      # + Tests and checks                                                     +
      # +----------------------------------------------------------------------+

      - name: Run tests
        run: nix develop --command -- pnpm run test

      - name: Run linter
        # Bun does not yet support ESlint.
        run: "nix develop --command -- pnpm run check:lint"

      - name: Check formatting
        run: "nix develop --command -- pnpm run check:format"

      - name: Build flake package
        run: nix build .
